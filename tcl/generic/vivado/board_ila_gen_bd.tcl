set out_file_path "${orig_proj_dir}/helpers/${ila_default_board_name}.tcl"
set file_gen_bd [open $out_file_path "w"]
puts "TCL: New file: $out_file_path"

puts "TCL: **********************************************************************************"
puts "TCL: IMPORTNANT: IT IS RECOMMENDED TO SYNTHESIZE THE DESIGN BEFORE RUNNING 'MAKE PROBES'"
puts "TCL: **********************************************************************************"
puts "TCL: This script will look for existing widths available from netlist"

puts -nonewline $file_gen_bd "# Create board for ILA creation on a ZYNQ platform:\n"
puts -nonewline $file_gen_bd "# This file has been generated by ${ila_default_board_name}_gen_bd.tcl\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# CHANGE DESIGN NAME HERE\n"
puts -nonewline $file_gen_bd "set board_name \"board_ila\"\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 0. CHECKING IF PROJECT EXISTS\n"
puts -nonewline $file_gen_bd "if { \[get_projects -quiet\] eq \"\" } {\n"
puts -nonewline $file_gen_bd "    puts \"ERROR: Please open or create a project!\"\n"
puts -nonewline $file_gen_bd "    return 1\n"
puts -nonewline $file_gen_bd "}\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 1. Creating the design if needed\n"
puts -nonewline $file_gen_bd "set errMsg \"\"\n"
puts -nonewline $file_gen_bd "set nRet 0\n"
puts -nonewline $file_gen_bd "set cur_design \[current_bd_design -quiet]\n"
puts -nonewline $file_gen_bd "set list_cells \[get_bd_cells -quiet\]\n"
puts -nonewline $file_gen_bd "if { \${board_name} ne \"\" && \${cur_design} eq \${board_name} } {\n"
puts -nonewline $file_gen_bd "   # Checks if design is empty or not\n"
puts -nonewline $file_gen_bd "   if { \$list_cells ne \"\" } {\n"
puts -nonewline $file_gen_bd "        set errMsg \"ERROR: Design <\$board_name> already exists in your project, please set the variable <board_name> to another value.\"\n"
puts -nonewline $file_gen_bd "        set nRet 1\n"
puts -nonewline $file_gen_bd "   } else {\n"
puts -nonewline $file_gen_bd "        puts \"INFO: Constructing design in IPI design <\$board_name>...\"\n"
puts -nonewline $file_gen_bd "   }\n"
puts -nonewline $file_gen_bd "} elseif { \${cur_design} ne \"\" && \${cur_design} ne \${board_name} } {\n"
puts -nonewline $file_gen_bd "   if { \$list_cells eq \"\" } {\n"
puts -nonewline $file_gen_bd "        puts \"INFO: You have an empty design <\${cur_design}>. Will go ahead and create design...\"\n"
puts -nonewline $file_gen_bd "   } else {\n"
puts -nonewline $file_gen_bd "        set errMsg \[\"ERROR: Design <\${cur_design}> is not empty! Please do not source this script on non-empty designs.\"\]\n"
puts -nonewline $file_gen_bd "        set nRet 1\n"
puts -nonewline $file_gen_bd "   }\n"
puts -nonewline $file_gen_bd "} else {\n"
puts -nonewline $file_gen_bd "    if { \[get_files -quiet \${board_name}.bd\] eq \"\" } {\n"
puts -nonewline $file_gen_bd "        puts \"INFO: Currently there is no design <\$board_name> in project, so creating one...\"\n"
puts -nonewline $file_gen_bd "        create_bd_design -dir \$boards_dir \$ila_default_board_name\n"
puts -nonewline $file_gen_bd "        current_bd_design \$ila_default_board_name\n"
puts -nonewline $file_gen_bd "        puts \"INFO: Making design <\$board_name> as current_bd_design.\"\n"
puts -nonewline $file_gen_bd "        current_bd_design \$board_name\n"
puts -nonewline $file_gen_bd "    } else {\n"
puts -nonewline $file_gen_bd "        set errMsg \"ERROR: Design <\$board_name> already exists in your project, please set the variable <board_name> to another value.\"\n"
puts -nonewline $file_gen_bd "        set nRet 3\n"
puts -nonewline $file_gen_bd "    }\n"
puts -nonewline $file_gen_bd "}\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "puts \"INFO: Currently the variable <board_name> is equal to \'\$board_name\'.\"\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "if { \$nRet != 0 } {\n"
puts -nonewline $file_gen_bd "    puts \$errMsg\n"
puts -nonewline $file_gen_bd "    return \$nRet\n"
puts -nonewline $file_gen_bd "}\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2. Create the board\n"
puts -nonewline $file_gen_bd "# 2.1 Create interface ports\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2.2 Create ports\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2.3.0 Create instance: processing_system7_0, and set properties\n"
puts -nonewline $file_gen_bd "set processing_system7_0 \[ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0 \]\n"
puts -nonewline $file_gen_bd "apply_bd_automation -rule xilinx.com:bd_rule:processing_system7 -config {make_external \"FIXED_IO, DDR\" apply_board_preset \"1\" Master \"Disable\" Slave \"Disable\" }  \[get_bd_cells processing_system7_0\]\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2.3.1 Create instance: wrapper_ila.vhd\n"
puts -nonewline $file_gen_bd "create_bd_cell -type module -reference wrapper_ila wrapper_ila_0\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2.3.2 Create instance: ila_0 (native = non-axi), and set properties\n"
puts -nonewline $file_gen_bd "create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0\n"

# 1. Static probes Clock and Reset
set static_probes_type_width "CONFIG.C_PROBE0_TYPE {0} CONFIG.C_PROBE0_WIDTH {1} CONFIG.C_PROBE1_TYPE {0} CONFIG.C_PROBE1_WIDTH {1} "

# 2. Variable probes based on th wrapped top module
# Inputs
set variable_probes_type_width ""
set cnt 0
set index_probe 2
set input_widths_total_resolved_i [string range [lindex [split $all_input_widths_total_resolved "|"] $cnt] 0 end]
while {$input_widths_total_resolved_i ne ""} {
    append variable_probes_type_width "CONFIG.C_PROBE${index_probe}_TYPE {0} CONFIG.C_PROBE${index_probe}_WIDTH {$input_widths_total_resolved_i} "
    incr cnt
    incr index_probe
    set input_widths_total_resolved_i [string range [lindex [split $all_input_widths_total_resolved "|"] $cnt] 0 end]
}

# Outputs
set cnt 0
set output_widths_total_resolved_i [string range [lindex [split $all_output_widths_total_resolved "|"] $cnt] 0 end]
while {$output_widths_total_resolved_i ne ""} {
    append variable_probes_type_width "CONFIG.C_PROBE${index_probe}_TYPE {0} CONFIG.C_PROBE${index_probe}_WIDTH {$output_widths_total_resolved_i} "
    incr cnt
    incr index_probe
    set output_widths_total_resolved_i [string range [lindex [split $all_output_widths_total_resolved "|"] $cnt] 0 end]
}
variable num_of_probes $index_hdl_probe
puts "TCL: num of probes = $num_of_probes"
puts "TCL: static_probes_type_width = $static_probes_type_width"
puts "TCL: variable_probes_type_width = $variable_probes_type_width"
puts -nonewline $file_gen_bd "set_property -dict \[list CONFIG.C_NUM_OF_PROBES {$index_hdl_probe} CONFIG.C_ENABLE_ILA_AXI_MON {false} CONFIG.C_MONITOR_TYPE {Native} $static_probes_type_width $variable_probes_type_width] \[get_bd_cells ila_0\]\n"
puts -nonewline $file_gen_bd "update_module_reference board_ila_wrapper_ila_0_0\n"
# puts -nonewline $file_gen_bd "save_bd_design\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2.4 Create interface connections\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2.5 Make external\n"
# puts -nonewline $file_gen_bd "make_bd_pins_external \[get_bd_pins wrapper_ila_0/probe3_out_data\]\n"
puts -nonewline $file_gen_bd "make_bd_pins_external \[get_bd_pins wrapper_ila_0/in_rst\]\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2.6 Create port connections\n"
puts -nonewline $file_gen_bd "# FCLK_CLK0 => ...\n"
puts -nonewline $file_gen_bd "connect_bd_net \[get_bd_pins processing_system7_0/FCLK_CLK0\] \[get_bd_pins processing_system7_0/M_AXI_GP0_ACLK\]\n"
puts -nonewline $file_gen_bd "connect_bd_net \[get_bd_pins processing_system7_0/FCLK_CLK0\] \[get_bd_pins wrapper_ila_0/in_zynq_clk\]\n"
puts -nonewline $file_gen_bd "connect_bd_net \[get_bd_pins processing_system7_0/FCLK_CLK0\] \[get_bd_pins ila_0/clk\]\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# wrapper_ila_0 => ...\n"
puts -nonewline $file_gen_bd "connect_bd_net \[get_bd_pins wrapper_ila_0/probe0_in_zynq\] \[get_bd_pins ila_0/probe0\]\n"
puts -nonewline $file_gen_bd "connect_bd_net \[get_bd_pins wrapper_ila_0/probe1_in_rst\] \[get_bd_pins ila_0/probe1\]\n"

# Inputs
set cnt 0
set index_probe 2
set all_input_names_i [string range [lindex [split $all_input_names "|"] $cnt] 0 end]
while {$all_input_names_i ne ""} {
    set all_input_names_i_lower [string tolower $all_input_names_i]
    puts -nonewline $file_gen_bd "connect_bd_net \[get_bd_pins wrapper_ila_0/probe${index_probe}_$all_input_names_i_lower\] \[get_bd_pins ila_0/probe${index_probe}\]\n"
    incr index_probe
    incr cnt
    set all_input_names_i [string range [lindex [split $all_input_names "|"] $cnt] 0 end]
}

# Outputs
set cnt 0
set all_output_names_i [string range [lindex [split $all_output_names "|"] $cnt] 0 end]
while {$all_output_names_i ne ""} {
    set all_output_names_i_lower [string tolower $all_output_names_i]
    puts -nonewline $file_gen_bd "connect_bd_net \[get_bd_pins wrapper_ila_0/probe${index_probe}_$all_output_names_i_lower\] \[get_bd_pins ila_0/probe${index_probe}\]\n"
    incr index_probe
    incr cnt
    set all_output_names_i [string range [lindex [split $all_output_names "|"] $cnt] 0 end]
}
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# 2.7 Create address segments\n"
puts -nonewline $file_gen_bd "\n"
puts -nonewline $file_gen_bd "# Save board design\n"
puts -nonewline $file_gen_bd "save_bd_design"

close $file_gen_bd