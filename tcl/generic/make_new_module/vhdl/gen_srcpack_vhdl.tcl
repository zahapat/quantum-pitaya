# This file generates a template of a HDL source file package (VHDL)

puts $new_file_src_pack ""
puts $new_file_src_pack "    -- ${name_file}_pack.${suffix_file}: <brief description>"
puts $new_file_src_pack "    -- Engineer: $engineer_name"
puts $new_file_src_pack "    -- Email: $email_addr"
set clock_seconds [clock seconds]
set act_date [clock format $clock_seconds -format %D]
# puts $new_file_src_pack "    -- Created: $act_date"
puts $new_file_src_pack ""
puts $new_file_src_pack "    library ieee;"
puts $new_file_src_pack "    use ieee.std_logic_1164.all;"
puts $new_file_src_pack "    use ieee.numeric_std.all;"
puts $new_file_src_pack "    -- use ieee.math_real.all;"
puts $new_file_src_pack "    -- use ieee.math_complex.all;"
puts $new_file_src_pack ""
puts $new_file_src_pack "    -------------------------"
puts $new_file_src_pack "    -- Package Declaration --"
puts $new_file_src_pack "    -------------------------"
puts $new_file_src_pack "    package ${name_file}_pack is"
puts $new_file_src_pack ""
puts $new_file_src_pack "        constant PIXELS : integer := 65536;"
puts $new_file_src_pack ""
puts $new_file_src_pack "        type t_from_fifo is record"
puts $new_file_src_pack "            wr_full  : std_logic;"
puts $new_file_src_pack "            rd_empty : std_logic;"
puts $new_file_src_pack "        end record t_from_fifo; "
puts $new_file_src_pack ""
puts $new_file_src_pack "        component example_component is"
puts $new_file_src_pack "            port ("
puts $new_file_src_pack "                i_data  : in  std_logic;"
puts $new_file_src_pack "                o_rsult : out std_logic"
puts $new_file_src_pack "            );"
puts $new_file_src_pack "        end component example_component;"
puts $new_file_src_pack ""
puts $new_file_src_pack "        function bitwise_and ("
puts $new_file_src_pack "            i_vector : in std_logic_vector(3 downto 0))"
puts $new_file_src_pack "            return std_logic;"
puts $new_file_src_pack ""
puts $new_file_src_pack "    end;"
puts $new_file_src_pack ""
puts $new_file_src_pack "    ------------------"
puts $new_file_src_pack "    -- Package Body --"
puts $new_file_src_pack "    ------------------"
puts $new_file_src_pack "    package body ${name_file}_pack is"
puts $new_file_src_pack ""
puts $new_file_src_pack "        function bitwise_and ("
puts $new_file_src_pack "            i_vector : in std_logic_vector(3 downto 0)"
puts $new_file_src_pack "        )"
puts $new_file_src_pack "        return std_logic is"
puts $new_file_src_pack "        begin"
puts $new_file_src_pack "            return (i_vector(0) and i_vector(1) and i_vector(2) and i_vector(3));"
puts $new_file_src_pack "        end;"
puts $new_file_src_pack ""
puts -nonewline $new_file_src_pack "    end package body;"