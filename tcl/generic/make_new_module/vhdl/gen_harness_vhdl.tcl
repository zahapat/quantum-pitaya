puts $new_file_sim "    -- Includes all clock generators and all sim instances (DUTs, BFMs, ...)"
puts $new_file_sim ""
puts $new_file_sim "    library ieee;"
puts $new_file_sim "    use ieee.std_logic_1164.all;"
puts $new_file_sim "    use ieee.numeric_std.all;"
puts $new_file_sim "    -- use ieee.math_real.all;"
puts $new_file_sim "    -- use ieee.math_complex.all;"
puts $new_file_sim ""
puts $new_file_sim "    use std.textio.all;"
puts $new_file_sim "    use std.env.finish;"
puts $new_file_sim ""
puts $new_file_sim "    -- Additional packages (sim)"
puts $new_file_sim "    library $file_library_sim;"
puts $new_file_sim "        -- Project-specific packages"
puts $new_file_sim "    use $file_library_sim.const_pack_tb.all;"
puts $new_file_sim "    use $file_library_sim.gtypes_pack_tb.all;"
puts $new_file_sim "    use $file_library_sim.signals_pack_tb.all;"
puts $new_file_sim "    "
puts $new_file_sim "        -- Generic packages"
puts $new_file_sim "    use $file_library_sim.print_pack_tb.all;"
puts $new_file_sim "    use $file_library_sim.clk_pack_tb.all;"
puts $new_file_sim "    use $file_library_sim.list_string_pack_tb.all;"
puts $new_file_sim "    use $file_library_sim.print_list_pack_tb.all;"
puts $new_file_sim ""
puts $new_file_sim "    -- Additional project-specific packages (src)"
puts $new_file_sim "    library $file_library_src;"
puts $new_file_sim "    use $file_library_src.const_pack.all;"
puts $new_file_sim "    use $file_library_src.gtypes_pack.all;"
puts $new_file_sim "    use $file_library_src.signals_pack.all;"
puts $new_file_sim ""
puts $new_file_sim ""
puts $new_file_sim "    entity harness_${name_file}_tb is"
puts $new_file_sim "    end harness_${name_file}_tb;"
puts $new_file_sim ""
puts $new_file_sim "    architecture sim of harness_${name_file}_tb is"
puts $new_file_sim "    begin"
puts $new_file_sim ""
puts $new_file_sim "        gen_clk_freq_hz_int(clk, clk_hz);"
puts $new_file_sim ""
puts $new_file_sim "        inst_dut : entity lib_src.uart(rtl)"
puts $new_file_sim "            generic map ("
puts $new_file_sim "                baud => baud_rate,"
puts $new_file_sim "                clock_frequency => clk_hz"
puts $new_file_sim "            )"
puts $new_file_sim "            port map ("
puts $new_file_sim "                clock => clk,"
puts $new_file_sim "                reset => rst,"
puts $new_file_sim "                data_stream_in => to_uart,"
puts $new_file_sim "                data_stream_in_stb => to_uart_valid,"
puts $new_file_sim "                data_stream_in_ack => to_uart_ack,"
puts $new_file_sim "                data_stream_out => from_uart,"
puts $new_file_sim "                data_stream_out_stb => from_uart_valid,"
puts $new_file_sim "                tx => uart_tx,"
puts $new_file_sim "                rx => uart_rx"
puts $new_file_sim "            );"
puts $new_file_sim "        "
puts $new_file_sim "        inst_txbfm_uart_tb : entity lib_sim.txbfm_uart_tb(beh)"
puts $new_file_sim "            generic map ("
puts $new_file_sim "                baud => baud_rate"
puts $new_file_sim "            )"
puts $new_file_sim "            port map ("
puts $new_file_sim "                data => tx_bfm_data,"
puts $new_file_sim "                tx => uart_rx"
puts $new_file_sim "            );"
puts $new_file_sim ""
puts $new_file_sim "        inst_rxbfm_uart_tb : entity lib_sim.rxbfm_uart_tb(beh)"
puts $new_file_sim "            generic map ("
puts $new_file_sim "                baud => baud_rate"
puts $new_file_sim "            )"
puts $new_file_sim "            port map ("
puts $new_file_sim "                data => rx_bfm_data,"
puts $new_file_sim "                rx => uart_tx"
puts $new_file_sim "            );"
puts $new_file_sim ""
puts -nonewline $new_file_sim "    end architecture;"