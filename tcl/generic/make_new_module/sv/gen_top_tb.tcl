puts $new_file_sim "    // This is the topmost file, which connects the DUT and TestBench"
puts $new_file_sim "    // TestBench top consists of DUT, Test and Interface instances"
puts $new_file_sim "    // The interface connects the DUT and TestBench"
puts $new_file_sim ""
puts $new_file_sim "    `include \"${name_file}_interface.sv\""
puts $new_file_sim "    `include \"${name_file}_test.sv\""
puts $new_file_sim "    "
puts $new_file_sim "    module ${name_file}_top_tb;"
puts $new_file_sim "    "
puts $new_file_sim "        // Clock and rst signal declaration"
puts $new_file_sim "        bit clk;"
puts $new_file_sim "        bit rst;"
puts $new_file_sim "        "
puts $new_file_sim "        // Clock generation"
puts $new_file_sim "        always #5 clk = ~clk;"
puts $new_file_sim "        "
puts $new_file_sim "        // Reset strobe"
puts $new_file_sim "        initial begin"
puts $new_file_sim "            rst = 1;"
puts $new_file_sim "            #5 rst =0;"
puts $new_file_sim "        end"
puts $new_file_sim "        "
puts $new_file_sim "        "
puts $new_file_sim "        // Create instance of interface, inorder to connect DUT and testcase"
puts $new_file_sim "        intf i_intf(clk,rst);"
puts $new_file_sim "        "
puts $new_file_sim "        // Testcase instance, interface handle is passed to test as an argument"
puts $new_file_sim "        test t1(i_intf);"
puts $new_file_sim "        "
puts $new_file_sim "        // DUT instance, interface signals are connected to the DUT ports"
puts $new_file_sim "        adder DUT ("
puts $new_file_sim "            .clk(i_intf.clk),"
puts $new_file_sim "            .rst(i_intf.rst),"
puts $new_file_sim "            .a(i_intf.a),"
puts $new_file_sim "            .b(i_intf.b),"
puts $new_file_sim "            .valid(i_intf.valid),"
puts $new_file_sim "            .c(i_intf.c)"
puts $new_file_sim "        );"
puts $new_file_sim "        "
puts $new_file_sim "        // Enabline the wave dump"
puts $new_file_sim "        initial begin"
puts $new_file_sim "            \$dumpfile(\"dump.vcd\"); \$dumpvars;"
puts $new_file_sim "        end"
puts $new_file_sim ""
puts $new_file_sim "    endmodule"