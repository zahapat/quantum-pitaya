puts $new_file_sim "    // Receive the stimulus generated from the sequencer and drive it to DUT"
puts $new_file_sim "    // by assigning transaction class values to interface signals"
puts $new_file_sim ""
puts $new_file_sim "    // Declare driver class"
puts $new_file_sim "    class driver;"
puts $new_file_sim ""
puts $new_file_sim "        // Count number of transaction"
puts $new_file_sim "        int trans_cnt;"
puts $new_file_sim ""
puts $new_file_sim "        // Creating virtual interface handles"
puts $new_file_sim "        virtual intf virt_intf;"
puts $new_file_sim ""
puts $new_file_sim "        // Create mailbox handles"
puts $new_file_sim "        mailbox mail_seq2driv;"
puts $new_file_sim ""
puts $new_file_sim "        // Constructor"
puts $new_file_sim "        function new ("
puts $new_file_sim "            virtual intf virt_intf,"
puts $new_file_sim "            mailbox      mail_seq2driv);"
puts $new_file_sim ""
puts $new_file_sim "            // Get the interface"
puts $new_file_sim "            this.virt_intf = virt_intf;"
puts $new_file_sim ""
puts $new_file_sim "            // Get the mailbox handle from environment"
puts $new_file_sim "            this.mail_seq2driv;"
puts $new_file_sim "        endfunction"
puts $new_file_sim ""
puts $new_file_sim "        // Task RESET: Reset the interface signals to default/initial values (operator '<=')"
puts $new_file_sim "        task reset;"
puts $new_file_sim "            wait(virt_intf.reset);"
puts $new_file_sim "            \$display(\"\[ DRIVER ] ----- Reset Started -----\")"
puts $new_file_sim "            virt_intf.a <= 0;"
puts $new_file_sim "            virt_intf.b <= 0;"
puts $new_file_sim "            virt_intf.valid <= 0;"
puts $new_file_sim "            wait(!virt_intf.reset);"
puts $new_file_sim "            \$display(\"\[ DRIVER ] ----- Reset Ended   -----\");"
puts $new_file_sim "        endtask"
puts $new_file_sim ""
puts $new_file_sim "        // Task MAIN: Drive the transaction items to interface signals"
puts $new_file_sim "        task main;"
puts $new_file_sim "            forever begin"
puts $new_file_sim "                transaction trans;"
puts $new_file_sim "                mail_seq2driv.get(trans);"
puts $new_file_sim "                // Tx"
puts $new_file_sim "                @(posedge virt_intf.clk);"
puts $new_file_sim "                virt_intf.valid <= 1;"
puts $new_file_sim "                virt_intf.a <= trans.a;"
puts $new_file_sim "                virt_intf.b <= trans.b;"
puts $new_file_sim "                // Rx"
puts $new_file_sim "                @(posedge virt_intf.clk);"
puts $new_file_sim "                virt_intf.valid <= 0;"
puts $new_file_sim "                trans.c <= virt_intf.c;"
puts $new_file_sim "                @(posedge virt_intf.clk);"
puts $new_file_sim "                trans.display(\"\[ Driver ]\");"
puts $new_file_sim "                trans_cnt++;"
puts $new_file_sim "            end"
puts $new_file_sim "        endtask"
puts $new_file_sim "    endclass"